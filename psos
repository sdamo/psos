#!/usr/bin/env bash

OID_PROCESS="1.3.6.1.2.1.25.4.2.1.2"
OID_MEMORY="1.3.6.1.2.1.25.5.1.1.2"

SNMP_TIMEOUT="3"
SNMP_RETRIES="1"

function output {

    case $1 in
        begin|end)
            ;;
        *)
            echo "$3"
            ;;
    esac

}

# Вывод в формате csv
function output_csv {

    case $1 in
        begin|end)
            ;;
        *)
            echo "$1:$2:$3"
            ;;
    esac

}

# Вывод в формате xml
function output_xml {

    case $1 in
        begin)
            echo -e "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<status>"
            ;;
        end)
            echo -e "</status>"
            ;;
        *)
            echo -e "\t<process>\n\t\t<name>$1</name>\n\t\t<number>$2</number>\n\t\t<memory>$3</memory>\n\t</process>"
            ;;
    esac

}

# Вывод в формате json
function output_json {

    case $1 in
        begin)
            echo -e "{\n\t\"status\": ["
            ;;
        end)
            echo -e "\t]\n}"
            ;;
        *)
            echo -e "\t\t{\n\t\t\t\"name\": $1,\n\t\t\t\"number\": $2,\n\t\t\t\"memory\": $3\n\t\t},"
            ;;
    esac

}

# Вывод в формате rrdtool
function output_rrd {

    case $1 in
        begin|end)
            ;;
        *)
            UNIXTIME=`date +%s`
            echo "${UNIXTIME}:$3"
            ;;
    esac

}

function help_message {

    echo -e "USAGE: $0 [опции]\n"

    echo "OPTIONS:"
    echo -e "\t-i <IP-адрес> IP-адрес"
    echo -e "\t-c <комьюнити>"
    echo -e "\t-p <процесс> Имя процесса"
    echo -e "\t-o <формат>"
    echo -e "\t-t <количество>"

    exit 1

}

if [[ $# -eq 0 ]]
then

    echo "Not options"

    help_message

    exit 1

fi

while getopts ":i:c:p:o:t:h" OPTIONS
do

    case ${OPTIONS} in

        i)
            SNMP_HOST=${OPTARG}
            ;;
        c)
            SNMP_COMMUNITY=${OPTARG}
            ;;
        p)
            PROCESS_NAME=${OPTARG}
            ;;
        o)
            OUTPUT_FORMAT="_"${OPTARG}
            ;;
        t)
            TOP_COUNT=${OPTARG}
            ;;
        h|*)
            help_message
            ;;

    esac

done

SNMP_OPTIONS="-v2c -r ${SNMP_RETRIES} -t ${SNMP_TIMEOUT} -c ${SNMP_COMMUNITY} ${SNMP_HOST}"

if [[ ${TOP_COUNT} ]]
then

	snmpwalk ${SNMP_OPTIONS} ${OID_MEMORY} | sort -r -n -t ":" -k 2.1 | head -n ${TOP_COUNT} | sed 's/\ =\ INTEGER://;s/^.*\.//' | while read PROCESS_NUMBER PROCESS_MEMORY
	do

		PROCESS_NAME=`snmpget -Oqv ${SNMP_OPTIONS} ${OID_PROCESS}.${PROCESS_NUMBER}`

		echo ${PROCESS_NUMBER} ${PROCESS_NAME} ${PROCESS_MEMORY}

	done

	exit 1

fi

readarray -t PROCESS_NUMBERS < <(snmpwalk -Oqn ${SNMP_OPTIONS} ${OID_PROCESS} | grep \"${PROCESS_NAME}\" | awk '{print $1}' | sed 's/.*\.//')

if [[ ${PROCESS_NUMBERS} ]]
then

    output${OUTPUT_FORMAT} begin

	for PROCESS_NUMBER in ${PROCESS_NUMBERS[@]}
	do

		PROCESS_MEMORY=`snmpget -Oqv ${SNMP_OPTIONS} ${OID_MEMORY}.${PROCESS_NUMBER}`

		output${OUTPUT_FORMAT} ${PROCESS_NAME} ${PROCESS_NUMBER} ${PROCESS_MEMORY}

	done

    output${OUTPUT_FORMAT} end

fi
